require("dotenv").config();
const io = require("socket.io-client");

const SALAS_FIXAS = [
    'Escatologia','Trindade','Livre ArbÃ­trio','Soteriologia','Bibliologia',
    'Cristologia','Ateus','CatÃ³licos','Pentecostais','Adventistas',
    'Presbiterianos','Batistas','Testemunhas da Jeova','MÃ³rmons'
];

const POSSIVEIS_NUM_BOTS = (process.env.NUMBER_BOTS || "0")
    .split(",")
    .map(n => parseInt(n.trim()))
    .filter(n => !isNaN(n) && n >= 0);

const NOMES_BOTS = [
    "Gabriel", "Ana", "Rafael", "Sara", "JoÃ£o", "DÃ©bora", "Miguel", "Ester", "Lucas", "Priscila",
    "AndrÃ©", "LÃ­dia", "Tiago", "Rebeca", "Natanael", "Marta", "Felipe", "Talita", "TomÃ©", "Abigail"
];

const FRASES_TEMAS = [
    "GraÃ§a e paz, irmÃ£os!",
    "AlguÃ©m sabe um bom versÃ­culo sobre esse tema?",
    "O que vocÃªs acham dessa doutrina?",
    "Jesus Ã© o centro de tudo!",
    "Muito interessante esse ponto de vista!",
    "GlÃ³ria a Deus por esse espaÃ§o de debate.",
    "O EspÃ­rito Santo nos guia em toda verdade.",
    "A Palavra Ã© viva e eficaz!",
    "Evangelizar Ã© um chamado de todos nÃ³s.",
    "Cristo em vÃ³s, a esperanÃ§a da glÃ³ria.",
    "Quem sabe argumentar, somente com a bÃ­blia?",
    "Estou gostando de debater esses assuntos",
    "Vi que na sessÃ£o de estudos teolÃ³gicos do site tem muito material legal, tambÃ©m!!",
    "Ajudei a iniciativa com R$ 10,00 e ganhei um livro da hora!!",
    "Gostei demais da iniciativa, ajudei com R$ 5,00, nem pesa no bolso",
    "JÃ¡ mandei umas sugestÃµes de melhoria no fale conosco deles",
    "O importante Ã© glorificar a Deus com entendimento.",
    "Essa Ã© uma das doutrinas mais debatidas, nÃ©?",
    "Cada versÃ­culo revela um pouco mais da verdade.",
    "A BÃ­blia Ã© nossa Ãºnica regra de fÃ© e prÃ¡tica.",
    "Deus abenÃ§oe todos os irmÃ£os dessa sala!",
    "JÃ¡ oraram hoje? OraÃ§Ã£o move o coraÃ§Ã£o de Deus.",
    "Muitos sÃ£o chamados, poucos escolhidos!",
    "Que possamos crescer em graÃ§a e conhecimento.",
    "Jesus estÃ¡ voltando! Estamos preparados?",
    "Estou anotando vÃ¡rias referÃªncias aqui!",
    "GlÃ³ria a Deus por esse projeto maravilhoso!",
    "Esse tema me fez refletir muito.",
    "O debate Ã© saudÃ¡vel quando hÃ¡ respeito.",
    "EdificaÃ§Ã£o mÃºtua Ã© o objetivo dessa sala.",
    "Compartilhar conhecimento fortalece nossa fÃ©.",
    "Cada doutrina deve ser testada Ã  luz da Palavra.",
    "A humildade Ã© essencial em qualquer debate.",
    "Deus nos dÃ¡ sabedoria para entender sua vontade.",
    "Aprender juntos nos aproxima do propÃ³sito divino.",
    "Discernir Ã© um dom que devemos cultivar com oraÃ§Ã£o.",
    "A verdade liberta, mas tambÃ©m une.",
    "Debater com amor edifica a todos.",
    "A comunhÃ£o entre irmÃ£os Ã© uma benÃ§Ã£o preciosa.",
    "Respeitar opiniÃµes diferentes Ã© sinal de maturidade cristÃ£.",
    "A Palavra de Deus Ã© fonte inesgotÃ¡vel de aprendizado.",
    "Quando dois ou trÃªs se reÃºnem em Seu nome, Ele estÃ¡ presente.",
    "DÃºvidas sÃ£o portas para o crescimento espiritual.",
    "Mais importante que vencer o debate Ã© viver a verdade.",
    "A BÃ­blia deve ser nosso guia em toda discussÃ£o.",
    "CristÃ£os maduros sabem ouvir antes de falar.",
    "O EspÃ­rito Santo nos ensina mesmo atravÃ©s de outros irmÃ£os.",
    "A sabedoria do alto Ã© pacÃ­fica e cheia de misericÃ³rdia.",
    "Quem busca a verdade encontra a paz.",
    "NÃ£o existe edificaÃ§Ã£o sem amor ao prÃ³ximo.",
    "A luz da Escritura revela os caminhos do Senhor.",
    "O evangelho Ã© simples, mas profundo.",
    "Unidade nÃ£o significa uniformidade.",
    "A diversidade de dons enriquece o Corpo de Cristo.",
    "A verdade sempre prevalece no tempo certo.",
    "Cada encontro Ã© uma oportunidade divina de crescimento.",
    "Debater com mansidÃ£o atrai mais coraÃ§Ãµes.",
    "Toda palavra deve ser temperada com graÃ§a.",
    "A glÃ³ria Ã© de Deus, mesmo nos nossos argumentos.",
    "Jesus Ã© o caminho, e toda discussÃ£o deve levar a Ele."
];

function gerarNomeUnico(base) {
    return `* ${base} `;
}

function lerIntervaloDinamicamente() {
    const intervaloStr = process.env.BOTS_INTERVAL_RANGE || "20000,30000";
    const [minStr, maxStr] = intervaloStr.split(",").map(n => parseInt(n.trim()));
    const min = !isNaN(minStr) ? minStr : 20000;
    const max = !isNaN(maxStr) ? maxStr : 30000;
    return Math.floor(Math.random() * (max - min)) + min;
}

function enviarMensagens(socket, sala, nomeBot) {
    function enviar() {
        const intervalo = lerIntervaloDinamicamente();
        setTimeout(() => {
            const frase = FRASES_TEMAS[Math.floor(Math.random() * FRASES_TEMAS.length)];
            socket.emit("mensagem", {
                sala,
                usuario: nomeBot,
                mensagem: frase
            });
            enviar();
        }, intervalo);
    }
    enviar();
}

function iniciarBot(nomeBot, sala) {
    const socket = io("http://localhost:3000", {
        transports: ["websocket"],
        reconnectionAttempts: 5,
        timeout: 5000,
    });

    socket.on("connect", () => {
        console.log(`[ðŸ¤– BOT] Conectado como ${nomeBot} na sala ${sala}`);
        socket.emit("entrar", { sala, usuario: nomeBot });
        enviarMensagens(socket, sala, nomeBot);
    });

    socket.on("connect_error", (err) => {
        console.error(`[BOT ERRO] Falha ao conectar ${nomeBot} na sala ${sala}:`, err.message);
    });

    socket.on("disconnect", () => {
        console.log(`[ðŸ¤– BOT] ${nomeBot} desconectado da sala ${sala}`);
    });
}

// Inicializa os bots em cada sala fixa
for (const sala of SALAS_FIXAS) {
    const qtdBots = POSSIVEIS_NUM_BOTS[Math.floor(Math.random() * POSSIVEIS_NUM_BOTS.length)];
    for (let i = 0; i < qtdBots; i++) {
        const baseNome = NOMES_BOTS[(i + sala.length) % NOMES_BOTS.length];
        const nomeBot = gerarNomeUnico(baseNome);
        iniciarBot(nomeBot, sala);
    }
}
